/**
 * Converts a value to cardinal (written) form.
 * @param {number|string|bigint} value Number to be convert.
 * @param {object} [options] Options for class.
 * @throws {Error} Value cannot be invalid.
 * @returns {string} Value in cardinal (written) format.
 */
export default function _default(value: number | string | bigint, options?: object): string;
export class Arabic extends AbstractLanguage {
    constructor(options: any);
    number: any;
    feminine: any;
    ones: {
        masculine: string[];
        feminine: string[];
    };
    arabicTens: string[];
    arabicHundreds: string[];
    arabicAppendedTwos: string[];
    arabicTwos: string[];
    arabicGroup: string[];
    arabicAppendedGroup: string[];
    arabicPluralGroups: string[];
    digitFeminineStatus(digit: any): string;
    processArabicGroup(groupNumber: any, groupLevel: any, remainingNumber: any): string;
    toCardinal(number: any): string;
}
import AbstractLanguage from '../classes/AbstractLanguage.js';
